{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","planlist","setPlanlist","console","log","useEffect","axios","method","url","headers","then","response","data","catch","error","style","flex","display","marginTop","width","marginLeft","length","map","item","index","price","placeholder","value","onChange","e","urlText","newList","updateValue","target","marginBottom","type","htmlType","onClick","bodyData","config","_id","accept","JSON","stringify","handleSubmit","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRA4FeA,MAtFf,WACE,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAmDA,OAlDAC,QAAQC,IAAI,aAAcH,GAE1BI,qBAAU,WASRC,IARa,CACXC,OAAQ,MACRC,IAAK,iDACLC,QAAS,CACP,8BAA+B,OAKhCC,MAAK,SAAUC,GACdT,EAAYS,EAASC,SAEtBC,OAAM,SAAUC,GACfX,QAAQC,IAAIU,QAEf,IAiCD,qBACEC,MAAO,CACLC,KAAM,EACNC,QAAS,QAHb,SAME,qBAAKF,MAAO,CAAEG,UAAW,KAAMC,MAAO,MAAOC,WAAY,OAAzD,SACGnB,EAASoB,OAAS,GACjBpB,EAASqB,KAAI,SAACC,EAAMC,GAClB,OACE,gCACE,wCAAWD,EAAKE,MAAhB,UACA,cAAC,IAAD,CACEC,YAAY,YACZC,MAAOJ,EAAKf,IACZoB,SAAU,SAACC,GAAD,OAtBN,SAACC,EAASN,EAAOD,GACnC,IAAIQ,EAAO,YAAO9B,GAClB8B,EAAQP,GAAR,2BAAsBD,GAAtB,IAA4Bf,IAAKsB,IACjC5B,EAAY6B,GAmBmBC,CAAYH,EAAEI,OAAON,MAAOH,EAAOD,MAEtD,cAAC,IAAD,CACER,MAAO,CAAEG,UAAW,GAAIgB,aAAc,IACtCC,KAAK,UACLC,SAAS,SACTC,QAAS,kBApDJ,SAACV,GACpB,IAAMW,EAAW,CACfb,MAAOE,EAAMF,MACbjB,IAAKmB,EAAMnB,KAET+B,EAAS,CACXhC,OAAQ,MACRC,IAAI,gDAAD,OAAkDmB,EAAMa,KAC3D/B,QAAS,CACPgC,OAAQ,mBACR,eAAgB,oBAElB7B,KAAM8B,KAAKC,UAAUL,IAGvBhC,IAAMiC,GACH7B,MAAK,SAAUC,GACdR,QAAQC,IAAIO,MAEbE,OAAM,SAAUC,GACfX,QAAQC,IAAIU,MAgCa8B,CAAarB,IAJ9B,sBAPQC,WCzDTqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrC,MAAK,YAAkD,IAA/CsC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.601c3873.chunk.js","sourcesContent":["import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Input, Button } from \"antd\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [planlist, setPlanlist] = useState([]);\n  console.log(\"planlist: \", planlist);\n\n  useEffect(() => {\n    var config = {\n      method: \"get\",\n      url: \"https://money-india.herokuapp.com/plan-listing\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    };\n\n    axios(config)\n      .then(function (response) {\n        setPlanlist(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n\n  const handleSubmit = (value) => {\n    const bodyData = {\n      price: value.price,\n      url: value.url,\n    };\n    var config = {\n      method: \"put\",\n      url: `https://money-india.herokuapp.com/updateplan/${value._id}`,\n      headers: {\n        accept: \"application/json\",\n        \"Content-type\": \"application/json\",\n      },\n      data: JSON.stringify(bodyData),\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const updateValue = (urlText, index, item) => {\n    let newList = [...planlist];\n    newList[index] = { ...item, url: urlText };\n    setPlanlist(newList);\n  };\n\n  return (\n    <div\n      style={{\n        flex: 1,\n        display: \"flex\",\n      }}\n    >\n      <div style={{ marginTop: \"6%\", width: \"50%\", marginLeft: \"25%\" }}>\n        {planlist.length > 0 &&\n          planlist.map((item, index) => {\n            return (\n              <div key={index}>\n                <h4>Price {item.price} RS.</h4>\n                <Input\n                  placeholder=\"Enter url\"\n                  value={item.url}\n                  onChange={(e) => updateValue(e.target.value, index, item)}\n                />\n                <Button\n                  style={{ marginTop: 20, marginBottom: 20 }}\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  onClick={() => handleSubmit(item)}\n                >\n                  Submit\n                </Button>\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}